<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="fs.human.yk2hyeong.chart.dao.chartDAO">

    <!-- 주간 데이터 조회  -->
    <select id="getUnitPriceWeek" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.RECORDED_UNIT_PRICE) AS RECORDED_UNIT_PRICE,
            A.RECORDED_DATE
        FROM
            TB_PRICE_API_HISTORY A
                LEFT JOIN TB_CODE_DETAIL B
                          ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE A.LOW_CODE_VALUE = #{detailCodeId}
          AND A.RECORDED_DATE >= TO_DATE(SYSDATE - 7)
        GROUP BY
            B.MID_CODE_NAME,
            B.LOW_CODE_NAME,
            A.RECORDED_DATE
        ORDER BY
            A.RECORDED_DATE
    </select>

    <!-- 주간 예측 데이터 조회  -->
    <select id="getUnitPriceWeekPredictor" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.PREDICTED_UNIT_PRICE) AS PREDICTED_UNIT_PRICE,
            A.PREDICT_DATE
        FROM
            TB_PRICE_PREDICTION A
                LEFT JOIN TB_CODE_DETAIL B
                    ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE
            A.LOW_CODE_VALUE = #{detailCodeId}
          <![CDATA[
            AND A.PREDICT_DATE >= TRUNC(SYSDATE) - 7
            AND A.PREDICT_DATE < TRUNC(SYSDATE) + 1
            ]]>
        GROUP BY
            B.LOW_CODE_NAME,
            A.PREDICT_DATE
        ORDER BY
            A.PREDICT_DATE
    </select>

    <!-- 월간 데이터 조회  -->
    <select id="getUnitPriceMonth" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.RECORDED_UNIT_PRICE) AS RECORDED_UNIT_PRICE,
            TO_DATE(TO_CHAR(A.RECORDED_DATE, 'YYYY/MM'), 'YYYY/MM') AS RECORDED_DATE

        FROM
            TB_PRICE_API_HISTORY A
                LEFT JOIN TB_CODE_DETAIL B
                          ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE A.LOW_CODE_VALUE = #{detailCodeId}
          AND A.RECORDED_DATE >= (SELECT ADD_MONTHS(SYSDATE, -5) FROM DUAL)
        GROUP BY
            B.MID_CODE_NAME,
            B.LOW_CODE_NAME,
            TO_CHAR(A.RECORDED_DATE, 'YYYY/MM')
        ORDER BY
            TO_CHAR(A.RECORDED_DATE, 'YYYY/MM')
    </select>

    <!-- 월간 예측 데이터 조회  -->
    <select id="getUnitPriceMonthPredictor" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.PREDICTED_UNIT_PRICE) AS PREDICTED_UNIT_PRICE,
            TO_DATE(TO_CHAR(A.PREDICT_DATE, 'YYYY/MM'), 'YYYY/MM') AS PREDICT_DATE
        FROM
            TB_PRICE_PREDICTION A
                LEFT JOIN TB_CODE_DETAIL B
                    ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE
            <![CDATA[
            A.LOW_CODE_VALUE = #{detailCodeId}
            AND A.PREDICT_DATE <= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 6)
        ]]>
        GROUP BY
            B.LOW_CODE_NAME,
            TO_CHAR(A.PREDICT_DATE, 'YYYY/MM')
        ORDER BY
            TO_CHAR(A.PREDICT_DATE, 'YYYY/MM')
    </select>

    <!-- 년간 데이터 조회  -->
    <select id="getUnitPriceYear" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.RECORDED_UNIT_PRICE) AS RECORDED_UNIT_PRICE,
            TO_DATE(TO_CHAR(A.RECORDED_DATE, 'YYYY'), 'YYYY') AS RECORDED_DATE
        FROM
            TB_PRICE_API_HISTORY A
                LEFT JOIN TB_CODE_DETAIL B
                          ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE A.LOW_CODE_VALUE = #{detailCodeId}
          AND A.RECORDED_DATE >= (SELECT ADD_MONTHS(SYSDATE, -60) FROM DUAL)
        GROUP BY
            B.MID_CODE_NAME,
            B.LOW_CODE_NAME,
            TO_CHAR(A.RECORDED_DATE, 'YYYY')
        ORDER BY
            TO_CHAR(A.RECORDED_DATE, 'YYYY')
    </select>

    <!-- 년간 예측 데이터 조회  -->
    <select id="getUnitPriceYearPredictor" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            B.LOW_CODE_NAME,
            AVG(A.PREDICTED_UNIT_PRICE) AS PREDICTED_UNIT_PRICE,
            TO_DATE(TO_CHAR(A.PREDICT_DATE, 'YYYY'), 'YYYY') AS PREDICT_DATE
        FROM
            TB_PRICE_PREDICTION A
                LEFT JOIN TB_CODE_DETAIL B
                ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
        WHERE
            A.LOW_CODE_VALUE = #{detailCodeId}
            AND A.PREDICT_DATE >= ADD_MONTHS(SYSDATE, -12)
        GROUP BY
            B.LOW_CODE_NAME,
            TO_CHAR(A.PREDICT_DATE, 'YYYY')
        ORDER BY
            TO_CHAR(A.PREDICT_DATE, 'YYYY')
    </select>

    <!-- 시세 등략율 데이터 조회  -->
    <select id="dailyPriceDiff" resultType="fs.human.yk2hyeong.chart.vo.ChartVO">
        SELECT
            C.LOW_CODE_NAME,
            AVG(A.RECORDED_UNIT_PRICE) AS YESTERDAY_PRICE,
            AVG(B.RECORDED_UNIT_PRICE) AS TODAY_PRICE,
            (AVG(A.RECORDED_UNIT_PRICE) - AVG(B.RECORDED_UNIT_PRICE)) AS PRICE_DIFF,
            ROUND(
                CASE
                    WHEN AVG(B.RECORDED_UNIT_PRICE) = 0 THEN 0
                    ELSE (AVG(A.RECORDED_UNIT_PRICE) - AVG(B.RECORDED_UNIT_PRICE)) / AVG(B.RECORDED_UNIT_PRICE) * 100
                END, 2
            ) AS PRICE_DIFF_PERCENT,
            F.YEAR_AVG,
            COUNT(E.PRODUCT_ID) AS CNT,
            #{today} AS toDay,
            #{yesterday} AS yesterDay
        FROM
            TB_PRICE_API_HISTORY A
                LEFT JOIN TB_PRICE_API_HISTORY B
                    ON A.LOW_CODE_VALUE = B.LOW_CODE_VALUE
                LEFT JOIN TB_CODE_DETAIL C
                    ON A.LOW_CODE_VALUE = C.LOW_CODE_VALUE
                LEFT JOIN TB_CODE D
                    ON C.CODE_ID = D.CODE_ID
                LEFT JOIN TB_PRODUCT E
                    ON C.DETAIL_CODE_ID = E.PRODUCT_CODE
                LEFT JOIN (
                            SELECT
                                H.LOW_CODE_VALUE,
                                AVG(H.RECORDED_UNIT_PRICE) AS YEAR_AVG
                            FROM
                                TB_PRICE_API_HISTORY H
                            WHERE
                                TO_CHAR(H.RECORDED_DATE, 'MM-DD') = TO_CHAR(SYSDATE, 'MM-DD')
                                AND H.RECORDED_DATE BETWEEN ADD_MONTHS(SYSDATE, -36) AND SYSDATE
                            GROUP BY
                                H.LOW_CODE_VALUE
                            ) F
                ON A.LOW_CODE_VALUE = F.LOW_CODE_VALUE
        WHERE
            TRUNC(A.RECORDED_DATE) = TRUNC(#{today})
            AND TRUNC(B.RECORDED_DATE) = TRUNC(#{yesterday})
            <![CDATA[
            AND D.TOP_CODE_NAME = 'CAT'
            AND E.PRODUCT_UNIT_PRICE <> 0
            AND A.RECORDED_UNIT_PRICE <> 0
            AND B.RECORDED_UNIT_PRICE <> 0
            ]]>
        GROUP BY
            C.LOW_CODE_NAME,
            F.YEAR_AVG
        ORDER BY
            CNT DESC
    </select>

</mapper>
