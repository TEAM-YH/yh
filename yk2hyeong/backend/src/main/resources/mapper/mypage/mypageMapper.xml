<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fs.human.yk2hyeong.mypage.dao.MypageDAO">
    <resultMap id="purchasedMap" type="fs.human.yk2hyeong.mypage.vo.MypageVO">
        <result property="buyId" column="buyId"/>
        <result property="productId" column="productId"/>
        <result property="memberId" column="memberId"/>
        <result property="buyQty" column="buyQty"/>
        <result property="buyUnitPrice" column="buyUnitPrice"/>
        <result property="buyTotalPrice" column="buyTotalPrice"/>
        <result property="buyDeliveryDate" column="buyDeliveryDate"/>
        <result property="createdDate" column="createdDate"/>
        <result property="productName" column="productName"/>
        <result property="productDescription" column="productDescription"/>
        <result property="productUnitPrice" column="productUnitPrice"/>
        <result property="productMinQtr" column="productMinQtr"/>
        <result property="sellMemberId" column="sellMemberId"/>
        <result property="imageName" column="imageName"/>
    </resultMap>

    <select id="selectPurchasedProducts" resultMap="purchasedMap">
        SELECT *
        FROM (
                 SELECT
                     PB.BUY_ID AS BUYID,
                     PB.PRODUCT_ID AS PRODUCTID,
                     PB.MEMBER_ID AS MEMBERID,
                     PB.BUY_QTY AS BUYQTY,
                     PB.BUY_UNIT_PRICE AS BUYUNITPRICE,
                     PB.BUY_TOTAL_PRICE AS BUYTOTALPRICE,
                     PB.BUY_DELIVERY_DATE AS BUYDELIVERYDATE,
                     PB.CREATED_DATE AS CREATEDDATE,
                     P.PRODUCT_NAME AS PRODUCTNAME,
                     P.PRODUCT_DESCRIPTION AS PRODUCTDESCRIPTION,
                     P.PRODUCT_UNIT_PRICE AS PRODUCTUNITPRICE,
                     P.PRODUCT_MIN_QTR AS PRODUCTMINQTR,
                     P.SELL_MEMBER_ID AS SELLMEMBERID,
                     I.IMAGE_NAME AS IMAGENAME,
                     'buy' AS SOURCE
                 FROM TB_PRODUCT_BUY PB
                          LEFT JOIN TB_PRODUCT P ON PB.PRODUCT_ID = P.PRODUCT_ID
                          LEFT JOIN TB_IMAGES I ON P.PRODUCT_ID = I.PRODUCT_ID AND I.IMAGE_TYPE = '200'
                 WHERE PB.MEMBER_ID = #{memberId}

                 UNION ALL

                 SELECT
                     R.REV_ID AS BUYID,
                     R.PRODUCT_ID AS PRODUCTID,
                     R.MEMBER_ID AS MEMBERID,
                     R.REV_QTY AS BUYQTY,
                     R.REV_UNIT_PRICE AS BUYUNITPRICE,
                     R.REV_TOTAL_PRICE AS BUYTOTALPRICE,
                     R.REV_DELIVERY_DATE AS BUYDELIVERYDATE,
                     R.CREATED_DATE AS CREATEDDATE,
                     P.PRODUCT_NAME AS PRODUCTNAME,
                     P.PRODUCT_DESCRIPTION AS PRODUCTDESCRIPTION,
                     P.PRODUCT_UNIT_PRICE AS PRODUCTUNITPRICE,
                     P.PRODUCT_MIN_QTR AS PRODUCTMINQTR,
                     P.SELL_MEMBER_ID AS SELLMEMBERID,
                     I.IMAGE_NAME AS IMAGENAME,
                     'reserve' AS SOURCE
                 FROM TB_PRODUCT_RESERVATION R
                          LEFT JOIN TB_PRODUCT P ON R.PRODUCT_ID = P.PRODUCT_ID
                          LEFT JOIN TB_IMAGES I ON P.PRODUCT_ID = I.PRODUCT_ID AND I.IMAGE_TYPE = '200'
                 WHERE R.MEMBER_ID = #{memberId}
             ) ALL_PURCHASES
        ORDER BY ALL_PURCHASES.CREATEDDATE DESC
    </select>

<!--    알람탭 데이터 불러오기-->
    <resultMap id="NotificationMap" type="fs.human.yk2hyeong.mypage.vo.MypageVO">
        <result property="alarmId" column="ALARM_ID"/>
        <result property="alarmContent" column="ALARM_CONTENT"/>
        <result property="receiverId" column="RECEIVER_ID"/>
        <result property="isRead" column="IS_READ"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="status" column="STATUS"/>
        <result property="productId" column="PRODUCT_ID"/>
        <result property="imageName" column="IMAGE_NAME"/>
    </resultMap>
    <select id="selectNotification" resultMap="NotificationMap">
        SELECT
            A.ALARM_ID,
            A.ALARM_CONTENT,
            A.RECEIVER_ID,
            A.IS_READ,
            TO_CHAR(A.CREATED_DATE, 'YYYY-MM-DD HH24:MI:SS') AS CREATED_DATE,
            A.PRODUCT_ID,
            I.IMAGE_NAME,
            CASE D.LOW_CODE_VALUE
                WHEN '007' THEN 'purchased'
                WHEN '008' THEN 'sold'
                WHEN '009' THEN 'expired'
                WHEN '010' THEN 'reported'
                WHEN '011' THEN 'approved'
                WHEN '012' THEN 'rejected'
                WHEN '001' THEN 'reserved'
                ELSE 'unknown'
                END AS STATUS,
            CASE 
                WHEN D.LOW_CODE_VALUE = '001' THEN TO_CHAR(R.CREATED_DATE, 'YYYY-MM-DD')
                ELSE NULL
            END AS RESERVATION_DATE,
            CASE 
                WHEN D.LOW_CODE_VALUE = '001' THEN TO_CHAR(R.REV_DELIVERY_DATE, 'YYYY-MM-DD')
                ELSE NULL
            END AS DELIVERY_DATE
        FROM
            TB_ALARM A
                JOIN TB_CODE_DETAIL D ON A.ALARM_TYPE = D.DETAIL_CODE_ID
                JOIN TB_CODE C ON D.CODE_ID = C.CODE_ID
                LEFT JOIN TB_PRODUCT P ON A.PRODUCT_ID = P.PRODUCT_ID
                LEFT JOIN TB_IMAGES I ON P.PRODUCT_ID = I.PRODUCT_ID AND I.IMAGE_TYPE = '200'
                LEFT JOIN TB_PRODUCT_RESERVATION R ON A.PRODUCT_ID = R.PRODUCT_ID AND A.RECEIVER_ID = R.MEMBER_ID
        WHERE
            C.TOP_CODE_NAME in('STATUS','REV_STATUS')
          AND A.RECEIVER_ID = #{receiverId}
        ORDER BY A.CREATED_DATE DESC
    </select>

    <!-- 판매완료(sold) 전용 -->
    <resultMap id="SoldNotificationMap" type="fs.human.yk2hyeong.mypage.vo.MypageVO">
        <result property="productId" column="PRODUCT_ID"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productUnitPrice" column="PRODUCT_UNIT_PRICE"/>
        <result property="createdDate" column="CREATED_DATE"/>
        <result property="sellerName" column="SELLER_NAME"/>
        <result property="buyerName" column="BUYER_NAME"/>
        <result property="memberAddr" column="MEMBER_ADDR"/>
        <result property="memberDetailAddr" column="MEMBER_DETAIL_ADDR"/>
        <result property="deliveryDate" column="DELIVERY_DATE"/>
    </resultMap>
    <select id="selectSoldNotification" resultMap="SoldNotificationMap">
        SELECT
            P.PRODUCT_ID,
            P.PRODUCT_NAME,
            P.PRODUCT_UNIT_PRICE,
            TO_CHAR(P.CREATED_DATE, 'YYYY-MM-DD') AS CREATED_DATE,

            SELLER.MEMBER_BNAME AS SELLER_NAME,
            BUYER.MEMBER_NAME AS BUYER_NAME,
            BUYER.MEMBER_ADDR,
            BUYER.MEMBER_DETAIL_ADDR,
            TO_CHAR(B.BUY_DELIVERY_DATE, 'YYYY-MM-DD') AS DELIVERY_DATE

        FROM TB_PRODUCT_BUY B
                 JOIN TB_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
                 JOIN TB_MEMBER SELLER ON P.SELL_MEMBER_ID = SELLER.MEMBER_ID
                 JOIN TB_MEMBER BUYER ON B.MEMBER_ID = BUYER.MEMBER_ID

        WHERE SELLER.MEMBER_ID = #{memberId}
        ORDER BY B.BUY_DELIVERY_DATE DESC
    </select>

<!--    카드 읽음 처리-->
    <update id="updateIsRead" parameterType="String">
        UPDATE TB_ALARM
        SET IS_READ = 'Y'
        WHERE ALARM_ID = #{alarmId}
    </update>

    <delete id="deleteNotification" parameterType="string">
        DELETE FROM TB_ALARM
        WHERE ALARM_ID = #{alarmId}
    </delete>

    <!-- 읽지 않은 알림 개수 조회 -->
    <select id="getUnreadNotificationCount" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM TB_ALARM A
        JOIN TB_CODE_DETAIL D ON A.ALARM_TYPE = D.DETAIL_CODE_ID
        JOIN TB_CODE C ON D.CODE_ID = C.CODE_ID
        WHERE C.TOP_CODE_NAME = 'STATUS'
          AND A.RECEIVER_ID = #{memberId}
          AND A.IS_READ = 'N'
    </select>

</mapper>