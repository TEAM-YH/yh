<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fs.human.yk2hyeong.product.dao.ProductDAO">

    <!-- 상품 정보, 코드 상세, 판매자 정보 조인 조회 -->
    <select id="getAllProducts" resultType="fs.human.yk2hyeong.product.vo.ProductVO">
        SELECT
            -- 상품 정보
            p.PRODUCT_ID,
            p.PRODUCT_CODE,
            p.PRODUCT_NAME,
            p.PRODUCT_DESCRIPTION,
            p.PRODUCT_STOCK_QTY,
            p.PRODUCT_UNIT_PRICE,
            p.SELL_MEMBER_ID,
            p.PRODUCT_TYPE,
            p.PRODUCT_MIN_QTR,
            p.PRODUCT_REV_START,
            p.PRODUCT_REV_END,
            p.PRODUCT_DISPLAY_FLAG,
            p.PRODUCT_STATUS,
            p.CREATED_ID AS createdId,
            p.CREATED_DATE AS createdDate,

            -- 코드명 (카테고리명, 상태명)
            cd1.MID_CODE_NAME AS PRODUCT_CAT, -- 식량작물,채소류 등
            cd1.LOW_CODE_NAME AS PRODUCT_CODE_NAME, -- 사과, 깻잎 등
            cd2.LOW_CODE_NAME AS PRODUCT_STATUS_NAME, -- 판매중, 판매종료 등

            -- 판매자 정보
            m.MEMBER_NAME AS SELLER_NAME, -- 판매자 이름
            m.MEMBER_EMAIL AS SELLER_EMAIL, -- 판매자 이메일
            m.MEMBER_BNAME AS SELLER_COMPANY, --상호명

            -- 상품 유형 및 표시 여부
            cd3.LOW_CODE_NAME AS PRODUCT_SELL_TYPE, -- 예약상품, 즉시구매상품
            cd4.LOW_CODE_NAME AS PRODUCT_DISPLAY_TYPE, -- 표시, 비표시

            img.IMAGE_ID AS IMAGE_ID, --이미지 uuid
            img.IMAGE_PATH AS IMAGE_PATH, --이미지경로
            img.IMAGE_NAME AS IMAGE_NAME, -- 이미지명
            img.IMAGE_TYPE AS IMAGE_TYPE, -- 이미지유형
            img.MEMBER_ID AS MEMBER_ID -- 이미지 등록한 회원

        FROM TB_PRODUCT p
                 LEFT JOIN TB_CODE_DETAIL cd1
                           ON p.PRODUCT_CODE = cd1.DETAIL_CODE_ID  -- 사과, 깻잎 등
                 LEFT JOIN TB_CODE_DETAIL cd2
                           ON p.PRODUCT_STATUS = cd2.DETAIL_CODE_ID  -- 판매중, 판매종료, 예약마감 등
                 LEFT JOIN TB_MEMBER m
                           ON p.SELL_MEMBER_ID = m.MEMBER_ID  -- 판매자 정보
                 LEFT JOIN TB_CODE_DETAIL cd3
                           ON p.PRODUCT_TYPE = cd3.DETAIL_CODE_ID -- 예약구매, 즉시구매
                 LEFT JOIN TB_CODE_DETAIL cd4
                           ON p.PRODUCT_DISPLAY_FLAG = cd4.DETAIL_CODE_ID -- 표시, 비표시
                LEFT JOIN TB_IMAGES img
                            ON p.PRODUCT_ID = img.PRODUCT_ID -- 이미지 테이블 조인

        ORDER BY p.CREATED_DATE DESC
    </select>

    <!-- 즐겨찾기 등록 -->
    <insert id="insertFavorite">
        INSERT INTO TB_FAVORITE (FAVORITE_ID, MEMBER_ID, PRODUCT_ID, CREATED_ID, UPDATED_ID)
        VALUES (SYS_GUID(), #{memberId}, #{productId}, #{memberId}, #{memberId})
    </insert>

    <!-- 즐겨찾기 삭제 -->
    <delete id="deleteFavorite">
        DELETE FROM TB_FAVORITE
        WHERE MEMBER_ID = #{memberId} AND PRODUCT_ID = #{productId}
    </delete>

    <!-- 회원 즐겨찾기 상품 ID 목록 조회 -->
    <select id="selectFavoriteProductIds" resultType="string">
        SELECT PRODUCT_ID FROM TB_FAVORITE WHERE MEMBER_ID = #{memberId}
    </select>

    <!-- 카테고리 중위코드(MID)별 하위코드(LOW) 목록 조회 -->
    <select id="selectCategoryDetails" resultType="fs.human.yk2hyeong.product.vo.CategoryDetailVO">
        SELECT
            DETAIL_CODE_ID,
            MID_CODE_VALUE,
            MID_CODE_NAME,
            LOW_CODE_VALUE,
            LOW_CODE_NAME
        FROM TB_CODE_DETAIL
        ORDER BY MID_CODE_VALUE, SORT_ORDER
    </select>

    <insert id="insertProduct" parameterType="fs.human.yk2hyeong.product.vo.ProductVO">
        INSERT INTO TB_PRODUCT (
            PRODUCT_ID, PRODUCT_CODE, PRODUCT_NAME, PRODUCT_DESCRIPTION, PRODUCT_STOCK_QTY,
            PRODUCT_UNIT_PRICE, SELL_MEMBER_ID, PRODUCT_TYPE, PRODUCT_MIN_QTR, PRODUCT_REV_START,
            PRODUCT_REV_END, PRODUCT_DISPLAY_FLAG, PRODUCT_STATUS, CREATED_ID, CREATED_DATE,
            UPDATED_ID, UPDATED_DATE
        ) VALUES (
                     #{productId}, #{productCode}, #{productName}, #{productDescription}, #{productStockQty},
                     #{productUnitPrice}, #{sellMemberId}, #{productType}, #{productMinQtr}, #{productRevStart},
                     #{productRevEnd}, #{productDisplayFlag}, #{productStatus}, #{createdId}, SYSDATE,
                     #{updatedId}, SYSDATE
                 )
    </insert>


    <insert id="insertImage">
        INSERT INTO TB_IMAGES (
            IMAGE_ID, IMAGE_PATH, IMAGE_NAME, IMAGE_TYPE, MEMBER_ID, PRODUCT_ID,
            CREATED_ID, CREATED_DATE, UPDATED_ID, UPDATED_DATE
        ) VALUES (
                     #{imageId}, #{imagePath}, #{imageName}, #{imageType}, #{memberId}, #{productId},
                     #{memberId}, SYSDATE, #{memberId}, SYSDATE
                 )
    </insert>




</mapper>
